{"version":3,"sources":["theme/colors.js","app-context.js","components/ColorPicker.js","components/Fabric.js","components/G.js","components/Stitch.js","components/shapes/ShapeBase.js","components/shapes/Diamond.js","components/shapes/Triangles.js","layout/star-interface/OuterTriangles.js","layout/star-interface/InnerTriangles.js","layout/star-interface/OuterDiamonds.js","components/shapes/Single.js","components/shapes/Square.js","layout/star-interface/CornerStars.js","components/shapes/Line.js","layout/star-interface/CenterStar.js","layout/star-diamond.js","layout/triangle-in-d.js","components/tonejs/polysketchinC.js","components/AudioStart.js","layout/tests/nested-diamonds.js","components/shapes/Plus.js","layout/tests/nested-plus.js","layout/tests/plus-cross.js","components/shapes/PlusStar.js","layout/tests/plus-stars.js","layout/tests/tone-test.js","layout/tests/square-test.js","layout/tests/line-test.js","components/shapes/Star.js","layout/tests/star-diamond-test.js","layout/tests/star-test.js","layout/tests/empty-diamond.js","layout/tests/noise-square.js","layout/tests/iso-triangles.js","components/shapes/X.js","layout/tests/x-stitch-set.js","layout/tests/TestPage.js","layout/FreeDraw.js","layout/layout.js","App.js","index.js"],"names":["colors","defaultFMSettings","oscillator","type","modulationIndex","modulation","envelope","attack","decay","sustain","release","attackCurve","volume","defaultMonoSettings","filter","Q","rolloff","filterEnvelope","baseFrequency","exponent","octaves","pitchShift","Tone","delay","maxDelay","feedback","wet","reverb","toDestination","neQuadrantSynth","chain","seQuadrantSynth","swQuadrantSynth","nwQuadrantSynth","ascLineSynth","descLineSynth","verticalLineSynth","horizontalLineSynth","outerDiamondSynth","defaultAppContext","cellSize","selectFill","setSelectFill","isAudioStarted","setIsAudioStarted","AppContext","createContext","useStyles","makeStyles","root","position","bottom","right","display","justifyContent","alignItems","padding","color","customColorOptions","ColorPicker","classes","React","colorPickerOpen","setColorPickerOpen","className","style","onChangeComplete","hex","IconButton","size","fontSize","onClick","Palette","backgroundColor","Fabric","gridSize","showGrid","gridColor","children","useContext","viewBox","id","x","y","width","height","patternUnits","x1","y1","x2","y2","stroke","strokeWidth","fill","G","rest","transform","Stitch","selected","handleClick","currentFill","setCurrentFill","data-id","ShapeBase","stitches","setSelected","map","stitch","stitchState","setStitchState","stitchClickHandler","event","shiftKey","newStitches","currentTarget","dataset","fillOpacity","i","Diamond","diameter","filled","cx","cy","setStitches","realDiameter","setRealDiameter","mid","s","push","generateRightStitches","orientation","sidelength","tmp","RightTriangle","sideLength","useState","useEffect","generateIsoStitches","baseWidth","altitude","Math","ceil","center","n","IsoTriangle","setBaseWidth","triangle","opacity","OuterTriangles","value","vol","setVol","topRightEl","topLeftEl","bottomRightEl","bottomLeftEl","blink","el","classList","toggle","setTimeout","rampTo","e","current","bpm","ref","TriangleGroup","patternContent","patternDirection","triangles","synth","pattern","time","note","triggerAttackRelease","start","stop","InnerTriangles","OuterDiamonds","selectedGreen","setSelectedGreen","sequence","Single","stitchSelected","setStitchSelected","Square","CornerStar","clickHandler","CornerStars","selectedWest","setSelectedWest","selectedEast","setSelectedEast","selectedNorth","setSelectedNorth","selectedSouth","setSelectedSouth","currentPitchShift","setCurrentPitchShift","pitch","Line","length","angle","tempStitches","CenterStar","patternUp","patternDown","verticalPattern","callback","values","playbackRate","horizontalPattern","horizontalSelected","setHorizontalSelected","verticalSelected","setVerticalSelected","downSelected","setDownSelected","upSelected","setUpSelected","StarDiamond","synthA","connect","pattern1","portamento","pattern2","pattern3","TriangleInD","Fragment","counter","top","left","overflow","zIndex","startButton","AudioStartButton","a","PlayCircleOutline","NestedDiamonds","selectAll","setSelectAll","selectAll2","setSelectAll2","Plus","lineWidth","floor","NestedPlus","PlusCross","PlusStar","PlusStars","polySketchInC","maxPolyphony","toMaster","set","detune","ToneTest","loopBeat","useRef","loopOn","setLoopOn","SquareTest","emptySelected","setEmptySelected","solidSelected","setSolidSelected","redSelected","setRedSelected","groupSelected","setGroupSelected","LineTest","Star","w","dwidth","dw","red","green","StarTest","selectFirst","setSelectFirst","selectSecond","setSelectSecond","EmptyDiamond","NoiseSquare","grayNoise","setGrayNoise","bwNoise","setBwNoise","interpolateGreys","random","bwtmp","round","maxWidth","margin","IsoscelesTriangles","X","index","arr","findIndex","XStitchSet","sel1","setSel1","sel2","setSel2","sel3","setSel3","sel4","setSel4","sel5","setSel5","sel6","setSel6","menu","url","title","component","embroidery","TestPage","path","exact","item","to","controls","marginBottom","form","marginRight","FreeDraw","setSize","text","setText","temp","noValidate","autoComplete","onSubmit","preventDefault","Number","TextField","label","variant","onChange","num","target","Button","backLink","Layout","App","basename","process","Provider","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.ee865045.chunk.js","sourcesContent":["export const colors = {\n  darkGray: \"#1f1300\",\n  gray: \"#2A3338\",\n  offWhite: \"#f2f7f2\",\n  darkRed: \"#7d2d26\",\n  red: \"#CE675E\",\n  lightRed: \"#dc928b\",\n  darkOrange: \"#c26100\",\n  orange: \"#FF8811\",\n  lightOrange: \"#ffa54c\",\n  darkYellow: \"#edb214\",\n  yellow: \"#F4D06F\",\n  lightYellow: \"#f8e2a6\",\n  darkBlue: \"#1446a0\",\n  blue: \"#1b5dd4\",\n  lightBlue: \"#6595ec\",\n  darkGreen: \"#0A5A3F\",\n  green: \"#108f64\",\n  lightGreen: \"#16c489\"\n};\n","import { createContext } from \"react\";\nimport * as Tone from \"tone\";\nimport { colors } from \"./theme/colors\";\n\n// GLOBAL TONEJS RESOURCES\n// DEFAULTS\nconst defaultFMSettings = {\n  oscillator: {\n    type: \"sine\"\n  },\n  modulationIndex: 20,\n  modulation: {\n    type: \"sawtooth\"\n  },\n  envelope: {\n    attack: 0.01,\n    decay: 0.2,\n    sustain: 0.2,\n    release: 2,\n    attackCurve: \"sine\"\n  },\n  volume: -9\n};\nconst defaultMonoSettings = {\n  oscillator: { type: \"sawtooth\" },\n  envelope: { attack: 0.001, decay: 0.1, release: 0.5, sustain: 0.5 },\n  filter: {\n    Q: 1,\n    rolloff: -12,\n    type: \"lowpass\"\n  },\n  filterEnvelope: {\n    attack: 0.4,\n    baseFrequency: 150,\n    decay: 0.2,\n    exponent: 2,\n    octaves: 3,\n    release: 2,\n    sustain: 0.5\n  },\n  volume: -12\n};\n\n// EFFECTS\nconst pitchShift = new Tone.PitchShift();\nconst delay = new Tone.FeedbackDelay({\n  maxDelay: 2,\n  feedback: 0.5,\n  wet: 0.2\n});\nconst reverb = new Tone.Freeverb();\nconst volume = new Tone.Volume(-12).toDestination();\n\n// SYNTHS\nconst neQuadrantSynth = new Tone.FMSynth(defaultFMSettings).chain(\n  pitchShift,\n  delay,\n  reverb,\n  volume\n);\nconst seQuadrantSynth = new Tone.FMSynth({\n  ...defaultFMSettings,\n  volume: 0\n}).chain(pitchShift, delay, reverb, volume);\nconst swQuadrantSynth = new Tone.FMSynth(defaultFMSettings).chain(\n  pitchShift,\n  delay,\n  reverb,\n  volume\n);\nconst nwQuadrantSynth = new Tone.FMSynth(defaultFMSettings).chain(\n  pitchShift,\n  delay,\n  reverb,\n  volume\n);\n\nconst ascLineSynth = new Tone.MonoSynth(defaultMonoSettings).chain(\n  pitchShift,\n  delay,\n  reverb,\n  volume\n);\nconst descLineSynth = new Tone.MonoSynth(defaultMonoSettings).chain(\n  pitchShift,\n  delay,\n  reverb,\n  volume\n);\nconst verticalLineSynth = new Tone.MonoSynth(defaultMonoSettings).chain(\n  pitchShift,\n  delay,\n  reverb,\n  volume\n);\nconst horizontalLineSynth = new Tone.MonoSynth(defaultMonoSettings).chain(\n  pitchShift,\n  delay,\n  reverb,\n  volume\n);\n\nconst outerDiamondSynth = new Tone.FMSynth({ volume: -9 }).chain(\n  pitchShift,\n  delay,\n  reverb,\n  volume\n);\n\nexport const defaultAppContext = {\n  cellSize: 24,\n  selectFill: colors.blue,\n  setSelectFill: () => {},\n  isAudioStarted: false,\n  setIsAudioStarted: () => {},\n  pitchShift,\n  delay,\n  reverb,\n  volume,\n  neQuadrantSynth,\n  seQuadrantSynth,\n  swQuadrantSynth,\n  nwQuadrantSynth,\n  ascLineSynth,\n  descLineSynth,\n  verticalLineSynth,\n  horizontalLineSynth,\n  outerDiamondSynth\n};\n\nexport const AppContext = createContext(defaultAppContext);\n","import * as React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { Palette } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { AppContext } from \"../app-context\";\nimport { CompactPicker } from \"react-color\";\nimport { colors } from \"../theme/colors\";\n\nconst useStyles = makeStyles({\n  root: {\n    position: \"fixed\",\n    bottom: 0,\n    right: 0,\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    alignItems: \"flex-end\",\n    padding: 5,\n    \"& .MuiIconButton-root\": {\n      color: \"#333\"\n    }\n  }\n});\n\nconst customColorOptions = [\n  \"#000000\",\n  colors.darkGray,\n  colors.gray,\n  colors.offWhite,\n  \"#FFFFFF\",\n  colors.darkRed,\n  colors.red,\n  colors.lightRed,\n  colors.darkOrange,\n  colors.orange,\n  colors.lightOrange,\n  colors.darkYellow,\n  colors.yellow,\n  colors.lightYellow,\n  colors.darkGreen,\n  colors.green,\n  colors.lightGreen,\n  colors.darkBlue,\n  colors.blue,\n  colors.lightBlue\n];\n\nexport default function ColorPicker() {\n  const classes = useStyles();\n  const { cellSize, selectFill, setSelectFill } = React.useContext(AppContext);\n  const [colorPickerOpen, setColorPickerOpen] = React.useState(false);\n\n  function handleColorChange(color) {\n    setSelectFill(color.hex);\n    setColorPickerOpen(false);\n  }\n\n  return (\n    <div className={classes.root}>\n      <div style={{ display: colorPickerOpen ? \"block\" : \"none\" }}>\n        <CompactPicker\n          color={selectFill}\n          colors={customColorOptions}\n          onChangeComplete={handleColorChange}\n        />\n      </div>\n      <IconButton\n        size=\"small\"\n        fontSize=\"large\"\n        onClick={() => setColorPickerOpen(!colorPickerOpen)}\n      >\n        <Palette />\n      </IconButton>\n    </div>\n  );\n}\n","import { makeStyles } from \"@material-ui/styles\";\nimport React from \"react\";\nimport { AppContext } from \"../app-context\";\n\nconst useStyles = makeStyles({\n  root: {\n    backgroundColor: ({ backgroundColor }) => backgroundColor\n  }\n});\n\n/** SVG Element with optional background color to fill the area with squares */\nexport default function Fabric({\n  gridSize,\n  backgroundColor,\n  showGrid,\n  gridColor,\n  children\n}) {\n  const classes = useStyles({ backgroundColor });\n  const { cellSize } = React.useContext(AppContext);\n\n  return (\n    <svg\n      className={classes.root}\n      viewBox={`0 0 ${gridSize[0] * cellSize + 1} ${\n        gridSize[1] * cellSize + 1\n      }`}\n    >\n      <defs>\n        <pattern\n          id=\"fabric-grid\"\n          x=\"0\"\n          y=\"0\"\n          width={cellSize}\n          height={cellSize}\n          patternUnits=\"userSpaceOnUse\"\n        >\n          <line\n            x1=\"0\"\n            y1=\"0\"\n            x2=\"100%\"\n            y2=\"0\"\n            stroke={gridColor ? gridColor : \"white\"}\n            strokeWidth={2}\n          />\n          <line\n            x1=\"0\"\n            y1=\"0\"\n            x2=\"0\"\n            y2=\"100%\"\n            stroke={gridColor ? gridColor : \"white\"}\n            strokeWidth={2}\n          />\n        </pattern>\n      </defs>\n      {showGrid && <rect width=\"100%\" height=\"100%\" fill=\"url(#fabric-grid)\" />}\n      {children}\n    </svg>\n  );\n}\n","import React from \"react\";\nimport { AppContext } from \"../app-context\";\n/**\n * <g> with cellSize based translate\n * @param {Object} props\n */\nexport default function G({ x, y, children, ...rest }) {\n  const { cellSize } = React.useContext(AppContext);\n  return (\n    <g\n      transform={`translate(${x ? x * cellSize : 0}, ${y ? y * cellSize : 0})`}\n      {...rest}\n    >\n      {children}\n    </g>\n  );\n}\n","import * as React from \"react\";\nimport { AppContext } from \"../app-context\";\n\nexport default function Stitch({ fill, x, y, id, selected, handleClick }) {\n  const [currentFill, setCurrentFill] = React.useState(fill);\n  const { cellSize, selectFill } = React.useContext(AppContext);\n\n  React.useEffect(() => {\n    if (selected) {\n      setCurrentFill(selectFill);\n    } else {\n      setCurrentFill(fill);\n    }\n  }, [selected]);\n\n  return (\n    <rect\n      width={cellSize}\n      height={cellSize}\n      fill={currentFill}\n      x={x * cellSize + 0.5}\n      y={y * cellSize + 0.5}\n      onClick={handleClick}\n      data-id={id}\n    />\n  );\n}\n","import * as React from \"react\";\nimport G from \"../G\";\nimport Stitch from \"../Stitch\";\n\nexport default function ShapeBase({ stitches, x, y, selected, setSelected }) {\n  const [stitchState, setStitchState] = React.useState(\n    stitches.map((stitch) => ({ ...stitch, selected: false }))\n  );\n\n  React.useEffect(() => {\n    setStitchState(stitches.map((stitch) => ({ ...stitch, selected: false })));\n  }, [stitches]);\n\n  function shapeClickHandler(event) {\n    if (!event.shiftKey && setSelected && selected != null) {\n      setSelected(!selected);\n    }\n  }\n\n  function stitchClickHandler(event) {\n    if (event.shiftKey) {\n      const newStitches = [...stitchState];\n      const id = event.currentTarget.dataset.id;\n      newStitches[id].selected = !newStitches[id].selected;\n      setStitchState(newStitches);\n    }\n  }\n\n  return (\n    <G x={x} y={y} fillOpacity={selected ? 0.5 : 1} onClick={shapeClickHandler}>\n      {stitchState.map((stitch, i) => (\n        <Stitch\n          fill={stitch.fill}\n          x={stitch.x}\n          y={stitch.y}\n          selected={stitch.selected}\n          handleClick={stitchClickHandler}\n          id={i}\n          key={`stitch-${i}`}\n        />\n      ))}\n    </G>\n  );\n}\n","import * as React from \"react\";\nimport G from \"../G\";\nimport ShapeBase from \"./ShapeBase\";\n\nexport default function Diamond({\n  diameter,\n  stroke,\n  fill,\n  filled,\n  cx,\n  cy,\n  selected,\n  setSelected\n}) {\n  const [stitches, setStitches] = React.useState();\n  const [realDiameter, setRealDiameter] = React.useState(\n    diameter % 2 === 0 ? diameter - 1 : diameter\n  );\n\n  React.useEffect(() => {\n    setRealDiameter(diameter % 2 === 0 ? diameter - 1 : diameter);\n  }, [diameter]);\n\n  React.useEffect(() => {\n    const mid = (realDiameter - 1) / 2;\n    const s = [];\n    for (let x = 0; x < realDiameter; x++) {\n      for (let y = 0; y < realDiameter; y++) {\n        if (\n          x === mid - y ||\n          x === mid + y ||\n          x === realDiameter - y + mid - 1 ||\n          x === y + mid + 1 - realDiameter\n        ) {\n          s.push({ fill: stroke, x, y });\n        }\n      }\n    }\n    if (filled) {\n      for (let x = 0; x < realDiameter; x++) {\n        for (let y = 0; y < realDiameter; y++) {\n          if (\n            x >= mid - y &&\n            x <= mid + y &&\n            x >= y + mid + 1 - realDiameter &&\n            x <= realDiameter - y + mid - 1\n          ) {\n            s.push({ fill, x, y });\n          }\n        }\n      }\n    }\n    setStitches(s);\n  }, [diameter, stroke, fill, filled]);\n\n  return (\n    <G x={cx} y={cy}>\n      {stitches && (\n        <ShapeBase\n          stitches={stitches}\n          x={-(realDiameter - 1) / 2}\n          y={-(realDiameter - 1) / 2}\n          selected={selected}\n          setSelected={setSelected}\n        />\n      )}\n    </G>\n  );\n}\n","import React from \"react\";\nimport ShapeBase from \"./ShapeBase\";\n\nfunction generateRightStitches(orientation, sidelength, fill) {\n  const tmp = [];\n  switch (orientation) {\n    case \"NE\":\n      for (let y = 0; y < sidelength; y++) {\n        for (let x = 0; x < y + 1; x++) {\n          tmp.push({ fill, x, y });\n        }\n      }\n      return tmp;\n    case \"SE\":\n      for (let y = 0; y < sidelength; y++) {\n        for (let x = 0; x < sidelength - y; x++) {\n          tmp.push({ fill, x, y });\n        }\n      }\n      return tmp;\n    case \"SW\":\n      for (let y = 0; y < sidelength; y++) {\n        for (let x = y; x < sidelength; x++) {\n          tmp.push({ fill, x, y });\n        }\n      }\n      return tmp;\n    case \"NW\":\n      for (let y = 0; y < sidelength; y++) {\n        for (let x = sidelength - y - 1; x < sidelength; x++) {\n          tmp.push({ fill, x, y });\n        }\n      }\n      return tmp;\n    default:\n      return [];\n  }\n}\n\nexport function RightTriangle({\n  orientation,\n  sideLength,\n  fill,\n  x,\n  y,\n  selected,\n  setSelected\n}) {\n  const [stitches, setStitches] = React.useState(\n    generateRightStitches(orientation, sideLength, fill)\n  );\n  React.useEffect(() => {\n    setStitches(generateRightStitches(orientation, sideLength, fill));\n  }, [orientation, sideLength, fill]);\n\n  return (\n    <ShapeBase\n      stitches={stitches}\n      x={x}\n      y={y}\n      selected={selected}\n      setSelected={setSelected}\n    />\n  );\n}\n\nfunction generateIsoStitches(orientation, baseWidth, fill) {\n  const altitude = Math.ceil(baseWidth / 2);\n  const center = altitude - 1;\n  const tmp = [];\n  switch (orientation) {\n    case \"north\":\n      for (let y = 0, n = 1; y < altitude; y++, n += 2) {\n        for (let i = 0; i < n; i++) {\n          tmp.push({ fill, x: center - y + i, y });\n        }\n      }\n      return tmp;\n    case \"south\":\n      for (let y = 0, n = baseWidth; y < altitude; y++, n -= 2) {\n        for (let i = 0; i < n; i++) {\n          tmp.push({ fill, x: y + i, y });\n        }\n      }\n      return tmp;\n    case \"east\":\n      for (let x = 0, n = baseWidth; x < altitude; x++, n -= 2) {\n        for (let i = 0; i < n; i++) {\n          tmp.push({ fill, x, y: x + i });\n        }\n      }\n      return tmp;\n    case \"west\":\n      for (let x = 0, n = 1; x < altitude; x++, n += 2) {\n        for (let i = 0; i < n; i++) {\n          tmp.push({ fill, x, y: center - x + i });\n        }\n      }\n      return tmp;\n    default:\n      return [];\n  }\n}\n\nexport function IsoTriangle({\n  orientation,\n  size,\n  fill,\n  x,\n  y,\n  selected,\n  setSelected\n}) {\n  const [baseWidth, setBaseWidth] = React.useState(\n    size % 2 === 0 ? size - 1 : size\n  );\n  const [stitches, setStitches] = React.useState(\n    generateIsoStitches(orientation, baseWidth, fill)\n  );\n  React.useEffect(() => {\n    setBaseWidth(size % 2 === 0 ? size - 1 : size);\n  }, [size]);\n  React.useEffect(() => {\n    setStitches(generateIsoStitches(orientation, baseWidth, fill));\n  }, [orientation, baseWidth, fill]);\n\n  return (\n    <ShapeBase\n      stitches={stitches}\n      x={x}\n      y={y}\n      selected={selected}\n      setSelected={setSelected}\n    />\n  );\n}\n","import { makeStyles } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport * as Tone from \"tone\";\nimport { AppContext } from \"../../app-context\";\nimport { RightTriangle } from \"../../components/shapes/Triangles\";\nimport { colors } from \"../../theme/colors\";\n\nconst useStyles = makeStyles({\n  triangle: {\n    opacity: 1,\n    \"&.clicked\": {\n      opacity: 0.5\n    }\n  }\n});\n\nexport default function OuterTriangles() {\n  const { volume } = React.useContext(AppContext);\n  const [vol, setVol] = React.useState(volume.volume.value);\n  const classes = useStyles();\n  const topRightEl = React.useRef(null);\n  const topLeftEl = React.useRef(null);\n  const bottomRightEl = React.useRef(null);\n  const bottomLeftEl = React.useRef(null);\n\n  React.useEffect(() => {\n    volume.volume.rampTo(vol, 0.5);\n  }, [vol]);\n\n  function blink(el) {\n    el.classList.toggle(\"clicked\");\n    setTimeout(() => el.classList.toggle(\"clicked\"), 50);\n  }\n\n  function tempoDown(e) {\n    if (!e.shiftKey) {\n      blink(topLeftEl.current);\n    }\n    Tone.Transport.bpm.value = Tone.Transport.bpm.value - 5;\n  }\n\n  function tempoUp(e) {\n    if (!e.shiftKey) {\n      blink(topRightEl.current);\n    }\n    Tone.Transport.bpm.value = Tone.Transport.bpm.value + 5;\n  }\n\n  function volumeUp(e) {\n    if (!e.shiftKey) {\n      blink(bottomRightEl.current);\n    }\n    if (vol < -4) {\n      setVol(vol + 2);\n    }\n  }\n\n  function volumeDown(e) {\n    if (!e.shiftKey) {\n      blink(bottomLeftEl.current);\n    }\n    setVol(vol - 2);\n  }\n\n  return (\n    <g>\n      <g onClick={tempoDown} className={classes.triangle} ref={topLeftEl}>\n        <RightTriangle\n          orientation=\"SE\"\n          sideLength={16}\n          fill={colors.gray}\n          x={0}\n          y={0}\n        />\n      </g>\n      <g onClick={tempoUp} className={classes.triangle} ref={topRightEl}>\n        <RightTriangle\n          orientation=\"SW\"\n          sideLength={16}\n          fill={colors.gray}\n          x={21}\n          y={0}\n        />\n      </g>\n      <g onClick={volumeUp} className={classes.triangle} ref={bottomRightEl}>\n        <RightTriangle\n          orientation=\"NW\"\n          sideLength={16}\n          fill={colors.gray}\n          x={21}\n          y={21}\n        />\n      </g>\n      <g onClick={volumeDown} className={classes.triangle} ref={bottomLeftEl}>\n        <RightTriangle\n          orientation=\"NE\"\n          sideLength={16}\n          fill={colors.gray}\n          x={0}\n          y={21}\n        />\n      </g>\n    </g>\n  );\n}\n","import * as React from \"react\";\nimport * as Tone from \"tone\";\nimport { AppContext } from \"../../app-context\";\nimport { IsoTriangle } from \"../../components/shapes/Triangles\";\nimport { colors } from \"../../theme/colors\";\n\nfunction TriangleGroup({ patternContent, patternDirection, triangles, synth }) {\n  const [selected, setSelected] = React.useState(false);\n\n  const pattern = React.useRef(\n    new Tone.Pattern(\n      function (time, note) {\n        synth.triggerAttackRelease(note, \"16n\", time);\n      },\n      patternContent,\n      patternDirection\n    )\n  );\n\n  React.useEffect(() => {\n    if (selected) {\n      pattern.current.start(0);\n    } else {\n      pattern.current.stop(0);\n    }\n    return () => pattern.current.stop(0);\n  }, [selected]);\n\n  return triangles.map((triangle) => (\n    <IsoTriangle\n      orientation={triangle.orientation}\n      size={triangle.size}\n      fill={colors.red}\n      x={triangle.x}\n      y={triangle.y}\n      selected={selected}\n      setSelected={setSelected}\n      key={`tri-${triangle.orientation}-${triangle.x}-${triangle.y}`}\n    />\n  ));\n}\n\nexport default function InnerTriangles() {\n  const { nwQuadrantSynth, neQuadrantSynth, swQuadrantSynth, seQuadrantSynth } =\n    React.useContext(AppContext);\n  return (\n    <g>\n      <TriangleGroup\n        patternContent={[\"D4\", \"F4\", \"D4\"]}\n        patternDirection=\"up\"\n        triangles={[\n          { orientation: \"north\", size: 9, x: 8, y: 13 },\n          { orientation: \"west\", size: 9, x: 13, y: 8 }\n        ]}\n        synth={nwQuadrantSynth}\n      />\n      <TriangleGroup\n        patternContent={[\"D4\", \"E4\", \"Eb4\", \"E4\", \"D4\"]}\n        patternDirection=\"up\"\n        triangles={[\n          { orientation: \"east\", size: 9, x: 19, y: 8 },\n          { orientation: \"north\", size: 9, x: 20, y: 13 }\n        ]}\n        synth={neQuadrantSynth}\n      />\n      <TriangleGroup\n        patternContent={[\"D4\", \"Eb4\", \"D4\", \"Eb4\", \"D4\", \"Eb4\", \"D4\"]}\n        patternDirection=\"down\"\n        triangles={[\n          { orientation: \"south\", size: 9, x: 8, y: 19 },\n          { orientation: \"west\", size: 9, x: 13, y: 20 }\n        ]}\n        synth={swQuadrantSynth}\n      />\n      <TriangleGroup\n        patternContent={[\"D2\"]}\n        patternDirection=\"down\"\n        triangles={[\n          { orientation: \"east\", size: 9, x: 19, y: 20 },\n          { orientation: \"south\", size: 9, x: 20, y: 19 }\n        ]}\n        synth={seQuadrantSynth}\n      />\n    </g>\n  );\n}\n","import * as React from \"react\";\nimport * as Tone from \"tone\";\nimport { AppContext } from \"../../app-context\";\nimport Diamond from \"../../components/shapes/Diamond\";\nimport { colors } from \"../../theme/colors\";\n\nexport default function OuterDiamonds() {\n  const { outerDiamondSynth } = React.useContext(AppContext);\n  const [selectedGreen, setSelectedGreen] = React.useState(false);\n  const sequence = new Tone.Sequence(\n    (time, note) => {\n      outerDiamondSynth.triggerAttackRelease(note, \"16t\", time);\n    },\n    [\"D4\", [null, \"C3\"], [\"F4\", \"G4\", \"A4\", \"458\"]],\n    \"4n\"\n  );\n\n  React.useEffect(() => {\n    selectedGreen ? sequence.start(0) : sequence.stop(0);\n    return () => sequence.stop(0);\n  }, [selectedGreen]);\n  return (\n    <g>\n      <Diamond\n        diameter={37}\n        cx={18}\n        cy={18}\n        stroke={colors.darkGreen}\n        selected={selectedGreen}\n        setSelected={setSelectedGreen}\n      />\n      <Diamond\n        diameter={35}\n        cx={18}\n        cy={18}\n        stroke={colors.darkGreen}\n        selected={selectedGreen}\n        setSelected={setSelectedGreen}\n      />\n      <Diamond\n        diameter={33}\n        cx={18}\n        cy={18}\n        stroke={colors.darkGreen}\n        selected={selectedGreen}\n        setSelected={setSelectedGreen}\n      />\n      <Diamond\n        diameter={31}\n        cx={18}\n        cy={18}\n        stroke={colors.darkGreen}\n        selected={selectedGreen}\n        setSelected={setSelectedGreen}\n      />\n      <Diamond diameter={27} cx={18} cy={18} stroke={colors.darkGray} />\n    </g>\n  );\n}\n","import * as React from \"react\";\nimport G from \"../G\";\nimport Stitch from \"../Stitch\";\n\nexport default function Single({ fill, x, y, selected, setSelected }) {\n  const [stitchSelected, setStitchSelected] = React.useState(false);\n  function clickHandler(event) {\n    if (!event.shiftKey && setSelected && selected != null) {\n      setSelected(!selected);\n    }\n  }\n\n  return (\n    <G fillOpacity={selected ? 0.5 : 1} onClick={clickHandler}>\n      <Stitch\n        fill={fill}\n        x={x}\n        y={y}\n        selected={stitchSelected}\n        handleClick={() => setStitchSelected(!stitchSelected)}\n      />\n    </G>\n  );\n}\n","import React from \"react\";\nimport ShapeBase from \"./ShapeBase\";\n\nexport default function Square({\n  width,\n  x,\n  y,\n  stroke,\n  fill,\n  selected,\n  setSelected\n}) {\n  const [stitches, setStitches] = React.useState([]);\n\n  React.useEffect(() => {\n    const tmp = [];\n    for (let x = 0; x < width; x++) {\n      for (let y = 0; y < width; y++) {\n        if (x == 0 || x == width - 1 || y == 0 || y == width - 1) {\n          tmp.push({ fill: stroke, x, y });\n        } else {\n          fill && tmp.push({ fill, x, y });\n        }\n      }\n    }\n    setStitches(tmp);\n  }, [width, stroke, fill]);\n\n  return (\n    <ShapeBase\n      stitches={stitches}\n      x={x}\n      y={y}\n      selected={selected}\n      setSelected={setSelected}\n    />\n  );\n}\n","import * as React from \"react\";\nimport { AppContext } from \"../../app-context\";\nimport Diamond from \"../../components/shapes/Diamond\";\nimport Single from \"../../components/shapes/Single\";\nimport Square from \"../../components/shapes/Square\";\nimport { colors } from \"../../theme/colors\";\n\nfunction CornerStar({ cx, cy, selected, setSelected, clickHandler }) {\n  return (\n    <g onClick={clickHandler}>\n      <Diamond\n        diameter={5}\n        cx={cx}\n        cy={cy}\n        stroke={colors.gray}\n        fill={colors.gray}\n        filled\n        selected={selected}\n        setSelected={setSelected}\n      />\n      <Single\n        x={cx}\n        y={cy}\n        fill={colors.yellow}\n        selected={selected}\n        setSelected={setSelected}\n      />\n    </g>\n  );\n}\n\nexport default function CornerStars() {\n  const { pitchShift, delay, reverb } = React.useContext(AppContext);\n  const [selectedWest, setSelectedWest] = React.useState(false);\n  const [selectedEast, setSelectedEast] = React.useState(false);\n  const [selectedNorth, setSelectedNorth] = React.useState(false);\n  const [selectedSouth, setSelectedSouth] = React.useState(false);\n  const [currentPitchShift, setCurrentPitchShift] = React.useState(0);\n\n  function resetClickHandler() {\n    setCurrentPitchShift(0);\n    setSelectedWest(false);\n    setSelectedEast(false);\n  }\n\n  React.useEffect(() => {\n    delay.wet.value = selectedWest ? 0.2 : 0;\n  }, [selectedWest]);\n  React.useEffect(() => {\n    reverb.wet.value = selectedEast ? 1 : 0;\n  }, [selectedEast]);\n  function northClickHandler(e) {\n    if (!e.shiftKey) {\n      setCurrentPitchShift(currentPitchShift + 1);\n    }\n  }\n  function southClickHandler(e) {\n    if (!e.shiftKey) {\n      setCurrentPitchShift(currentPitchShift - 1);\n    }\n  }\n  React.useEffect(() => {\n    pitchShift.pitch = currentPitchShift;\n    if (currentPitchShift > 0) {\n      setSelectedNorth(true);\n      setSelectedSouth(false);\n    } else if (currentPitchShift < 0) {\n      setSelectedNorth(false);\n      setSelectedSouth(true);\n    } else {\n      setSelectedNorth(false);\n      setSelectedSouth(false);\n    }\n  }, [currentPitchShift]);\n\n  return (\n    <g>\n      <CornerStar\n        cx={7}\n        cy={18}\n        selected={selectedWest}\n        setSelected={setSelectedWest}\n      />\n      <CornerStar\n        cx={29}\n        cy={18}\n        selected={selectedEast}\n        setSelected={setSelectedEast}\n      />\n      <CornerStar\n        cx={18}\n        cy={7}\n        selected={selectedNorth}\n        setSelected={setSelectedNorth}\n        clickHandler={northClickHandler}\n      />\n      <CornerStar\n        cx={18}\n        cy={29}\n        selected={selectedSouth}\n        setSelected={setSelectedSouth}\n        clickHandler={southClickHandler}\n      />\n      <g onClick={resetClickHandler}>\n        <Square width={3} x={17} y={17} stroke={colors.yellow} />\n        <Single x={18} y={18} stroke={colors.gray} />\n      </g>\n    </g>\n  );\n}\n","import React from \"react\";\nimport ShapeBase from \"./ShapeBase\";\n\nexport default function Line({\n  length,\n  angle,\n  color,\n  x,\n  y,\n  selected,\n  setSelected\n}) {\n  const [stitches, setStitches] = React.useState();\n\n  React.useEffect(() => {\n    const tempStitches = [];\n    if (angle === \"vertical\") {\n      for (let i = 0; i < length; i++) {\n        tempStitches.push({ fill: color, x: 0, y: i });\n      }\n    } else if (angle === \"horizontal\") {\n      for (let i = 0; i < length; i++) {\n        tempStitches.push({ fill: color, x: i, y: 0 });\n      }\n    } else if (angle === \"diagonal-down\") {\n      for (let i = 0; i < length; i++) {\n        tempStitches.push({ fill: color, x: i, y: i });\n      }\n    } else if (angle === \"diagonal-up\") {\n      for (let i = 0; i < length; i++) {\n        tempStitches.push({ fill: color, x: i, y: length - i - 1 });\n      }\n    }\n    setStitches(tempStitches);\n  }, [length, angle, color]);\n\n  return stitches ? (\n    <ShapeBase\n      stitches={stitches}\n      x={x}\n      y={y}\n      selected={selected}\n      setSelected={setSelected}\n    />\n  ) : (\n    <g></g>\n  );\n}\n","import React from \"react\";\nimport * as Tone from \"tone\";\nimport { AppContext } from \"../../app-context\";\nimport Line from \"../../components/shapes/Line\";\nimport { colors } from \"../../theme/colors\";\n\nexport default function CenterStar() {\n  const {\n    ascLineSynth,\n    descLineSynth,\n    verticalLineSynth,\n    horizontalLineSynth\n  } = React.useContext(AppContext);\n  const patternUp = new Tone.Pattern(\n    function (time, note) {\n      ascLineSynth.triggerAttackRelease(note, 0.1, time);\n    },\n    [\"D4\", \"F4\", \"G4\", \"A4\", \"458\", \"C4\"],\n    \"up\"\n  );\n  var patternDown = new Tone.Pattern(\n    function (time, note) {\n      descLineSynth.triggerAttackRelease(note, 0.1, time);\n    },\n    [\"C4\", \"D4\", \"E4\", \"G4\", \"A4\", \"458\"],\n    \"down\"\n  );\n  var verticalPattern = new Tone.Pattern({\n    callback: function (time, note) {\n      verticalLineSynth.triggerAttackRelease(note, 0.8);\n    },\n    values: [\"D4\", \"F4\", \"G4\", \"458\"],\n    pattern: \"random\",\n    playbackRate: 0.25\n  });\n  var horizontalPattern = new Tone.Pattern({\n    callback: function (time, note) {\n      horizontalLineSynth.triggerAttackRelease(note, 0.8);\n    },\n    values: [\"D4\", \"F4\", \"G4\", \"458\"],\n    pattern: \"random\",\n    playbackRate: 0.25\n  });\n\n  const [horizontalSelected, setHorizontalSelected] = React.useState(false);\n  const [verticalSelected, setVerticalSelected] = React.useState(false);\n  const [downSelected, setDownSelected] = React.useState(false);\n  const [upSelected, setUpSelected] = React.useState(false);\n\n  React.useEffect(() => {\n    downSelected ? patternDown.start(0) : patternDown.stop(0);\n    return () => patternDown.stop(0);\n  }, [downSelected]);\n\n  React.useEffect(() => {\n    upSelected ? patternUp.start(0) : patternUp.stop(0);\n    return () => patternUp.stop(0);\n  }, [upSelected]);\n\n  React.useEffect(() => {\n    verticalSelected ? verticalPattern.start(0) : verticalPattern.stop(0);\n    return () => verticalPattern.stop(0);\n  }, [verticalSelected]);\n\n  React.useEffect(() => {\n    horizontalSelected ? horizontalPattern.start(0) : horizontalPattern.stop(0);\n    return () => horizontalPattern.stop(0);\n  }, [horizontalSelected]);\n  return (\n    <g>\n      <Line\n        length={17}\n        angle=\"horizontal\"\n        color={colors.orange}\n        x={10}\n        y={18}\n        selected={horizontalSelected}\n        setSelected={setHorizontalSelected}\n      />\n      <Line\n        length={17}\n        angle=\"vertical\"\n        color={colors.orange}\n        x={18}\n        y={10}\n        selected={verticalSelected}\n        setSelected={setVerticalSelected}\n      />\n      <Line\n        length={11}\n        angle=\"diagonal-down\"\n        color={colors.orange}\n        x={13}\n        y={13}\n        selected={downSelected}\n        setSelected={setDownSelected}\n      />\n      <Line\n        length={11}\n        angle=\"diagonal-up\"\n        color={colors.orange}\n        x={13}\n        y={13}\n        selected={upSelected}\n        setSelected={setUpSelected}\n      />\n    </g>\n  );\n}\n","import React from \"react\";\nimport Fabric from \"../components/Fabric\";\nimport Diamond from \"../components/shapes/Diamond\";\nimport { colors } from \"../theme/colors\";\nimport OuterTriangles from \"./star-interface/OuterTriangles\";\nimport InnerTriangles from \"./star-interface/InnerTriangles\";\nimport OuterDiamonds from \"./star-interface/OuterDiamonds\";\nimport CornerStars from \"./star-interface/CornerStars\";\nimport CenterStar from \"./star-interface/CenterStar\";\n\nexport default function StarDiamond() {\n  return (\n    <Fabric gridSize={[37, 37]}>\n      <OuterTriangles />\n      <OuterDiamonds />\n      <InnerTriangles />\n      <CenterStar />\n      <Diamond diameter={25} cx={18} cy={18} stroke={colors.orange} />\n      <CornerStars />\n    </Fabric>\n  );\n}\n","import React from \"react\";\nimport * as Tone from \"tone\";\nimport Fabric from \"../components/Fabric\";\nimport { RightTriangle } from \"../components/shapes/Triangles\";\n\nconst pitchShift = new Tone.PitchShift(5).toDestination();\nconst delay = new Tone.FeedbackDelay({\n  maxDelay: 2,\n  feedback: 0.8\n  //wet: 0.2\n}).toDestination();\nconst synthA = new Tone.FMSynth({\n  oscillator: {\n    type: \"sawtooth\"\n  },\n  modulationIndex: 11,\n  modulation: {\n    type: \"square\"\n  },\n  envelope: {\n    attack: 0.01,\n    decay: 0.2,\n    sustain: 0.2,\n    release: 2,\n    attackCurve: \"sine\"\n  }\n}).connect(delay);\nconst synthB = new Tone.AMSynth({ portamento: 0.05 }).connect(delay);\nconst synthC = new Tone.Synth({ portamento: 0.05 }).connect(delay);\n\nvar pattern1 = new Tone.Pattern(\n  function (time, note) {\n    synthA.triggerAttackRelease(note, 0.1);\n  },\n  [\"D4\", \"F4\", \"D4\"],\n  \"up\"\n);\n\nvar pattern2 = new Tone.Pattern(\n  function (time, note) {\n    synthA.triggerAttackRelease(note, 0.1);\n  },\n  [\"D4\", \"E4\", \"Eb4\", \"E4\", \"D4\"],\n  \"up\"\n);\n\nvar pattern3 = new Tone.Pattern(\n  function (time, note) {\n    synthA.triggerAttackRelease(note, 0.1);\n  },\n  [\"D4\", \"Eb4\", \"D4\", \"Eb4\", \"D4\", \"Eb4\", \"D4\"],\n  \"down\"\n);\n\nexport default function TriangleInD() {\n  React.useEffect(function play() {\n    pattern1.start(0).stop(3);\n    pattern2.start(3).stop(10);\n    pattern3.start(10).stop(15);\n\n    Tone.Transport.start(1);\n    Tone.Transport.stop(3);\n    Tone.Transport.start(3);\n    Tone.Transport.stop(10);\n    Tone.Transport.start(10);\n    Tone.Transport.start(15);\n    Tone.Transport.bpm.value = 160;\n\n    return () => Tone.Transport.stop(0);\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Fabric gridSize={[21, 21]} showGrid={true}>\n        <RightTriangle orientation=\"NW\" fill=\"red\" sideLength={21} />\n      </Fabric>\n    </React.Fragment>\n  );\n}\n","import * as Tone from \"tone\";\n\nlet counter;\nlet synth;\n// let loopBeat;\n\ncounter = 0;\nsynth = new Tone.PolySynth({\n  maxPolyphony: 32,\n  envelope: {\n    attack: 0.001,\n    sustain: 0.2,\n    decay: 0.2,\n    release: 0.4\n  },\n  volume: 10\n}).toMaster();\nsynth.set({ detune: -1200 });\n//pluckSynth = new Tone.PluckSynth().toMaster();\n\n// loopBeat = new Tone.Loop(song, \"16n\");\n// Tone.Transport.bpm.value = 140;\n// Tone.Transport.start();\n// loopBeat.start(0);\n\nexport function polySketchInC(time) {\n  if (counter % 7 === 0) {\n    synth.triggerAttackRelease([\"256\"], \"16n\", time, 0.2);\n  }\n  if (counter === 4) {\n    synth.triggerAttackRelease([\"128\"], \"16n\", time, 0.5);\n  }\n  if (counter === 8) {\n    synth.triggerAttackRelease([\"384\"], \"16n\", time, 0.4);\n  }\n  if (counter === 9) {\n    synth.triggerAttackRelease([\"512\"], \"16n\", time, 0.3);\n  }\n  if (counter === 3) {\n    synth.triggerAttackRelease([\"640\"], \"16n\", time, 0.3);\n  }\n  if (counter === 2) {\n    synth.triggerAttackRelease([\"768\"], \"16n\", time, 0.3);\n  }\n  //synth.triggerAttackRelease([\"256\", \"384\", \"512\", \"640\"],'16', time, 0.4);\n  //pluckSynth.triggerAttackRelease('120', '16n', 1);\n  counter = (counter + 1) % 21;\n}\n","import React from \"react\";\nimport * as Tone from \"tone\";\nimport { AppContext } from \"../app-context\";\nimport { IconButton, makeStyles } from \"@material-ui/core\";\nimport { PlayCircleOutline } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles({\n  root: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    width: \"100vw\",\n    height: \"100vh\",\n    overflow: \"hidden\",\n    backgroundColor: \"rgba(0,0,0,0.7)\",\n    zIndex: 1000,\n    display: ({ isAudioStarted }) => (isAudioStarted ? \"none\" : \"flex\"),\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  startButton: {\n    color: \"rgba(255,255,255,1)\",\n    \"&:hover\": {\n      color: \"rgba(255,255,255,0.9)\"\n    },\n    \"& .MuiSvgIcon-root\": {\n      fontSize: \"6em\"\n    }\n  }\n});\n\nexport default function AudioStartButton() {\n  const { isAudioStarted, setIsAudioStarted } = React.useContext(AppContext);\n  const classes = useStyles({ isAudioStarted });\n\n  async function handleAudioStart() {\n    if (!isAudioStarted) {\n      await Tone.start();\n      setIsAudioStarted(true);\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleAudioStart} className={classes.startButton}>\n        <PlayCircleOutline />\n      </IconButton>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Fabric from \"../../components/Fabric\";\nimport Diamond from \"../../components/shapes/Diamond\";\n\nexport default function NestedDiamonds() {\n  const [selectAll, setSelectAll] = React.useState(false);\n  const [selectAll2, setSelectAll2] = React.useState(false);\n\n  return (\n    <React.Fragment>\n      <Fabric\n        gridSize={[41, 41]}\n        backgroundColor=\"#fff\"\n        // showGrid\n        // gridColor=\"#333\"\n      >\n        <Diamond\n          diameter={41}\n          filled\n          fill=\"#ff0000\"\n          stroke=\"#ff0000\"\n          cx={20}\n          cy={20}\n          selected={selectAll}\n          setSelected={setSelectAll}\n        />\n        <Diamond\n          diameter={31}\n          filled\n          fill=\"#ffffff\"\n          stroke=\"#ffffff\"\n          cx={20}\n          cy={20}\n          selected={selectAll}\n          setSelected={setSelectAll}\n        />\n        <Diamond\n          diameter={21}\n          filled\n          fill=\"#ff0000\"\n          stroke=\"#ff0000\"\n          cx={20}\n          cy={20}\n          selected={selectAll}\n          setSelected={setSelectAll}\n        />\n        <Diamond\n          diameter={11}\n          filled\n          fill=\"#ffffff\"\n          stroke=\"#ffffff\"\n          cx={20}\n          cy={20}\n          selected={selectAll}\n          setSelected={setSelectAll}\n        />\n        <Diamond\n          diameter={3}\n          filled\n          fill=\"#ff0000\"\n          stroke=\"#ff0000\"\n          cx={20}\n          cy={20}\n          selected={selectAll}\n          setSelected={setSelectAll}\n        />\n      </Fabric>\n      <Fabric\n        gridSize={[41, 41]}\n        backgroundColor=\"#fff\"\n        // showGrid\n        // gridColor=\"#333\"\n      >\n        <Diamond\n          diameter={41}\n          fill=\"#ff0000\"\n          stroke=\"#ff0000\"\n          cx={20}\n          cy={20}\n          selected={selectAll2}\n          setSelected={setSelectAll2}\n        />\n        <Diamond\n          diameter={39}\n          fill=\"#ff0000\"\n          stroke=\"#ff0000\"\n          cx={20}\n          cy={20}\n          selected={selectAll2}\n          setSelected={setSelectAll2}\n        />\n        <Diamond\n          diameter={37}\n          fill=\"#ff0000\"\n          stroke=\"#ff0000\"\n          cx={20}\n          cy={20}\n          selected={selectAll2}\n          setSelected={setSelectAll2}\n        />\n        <Diamond\n          diameter={33}\n          fill=\"#ff0000\"\n          stroke=\"#ff0000\"\n          cx={20}\n          cy={20}\n          selected={selectAll2}\n          setSelected={setSelectAll2}\n        />\n        <Diamond\n          diameter={25}\n          fill=\"#ff0000\"\n          stroke=\"#ff0000\"\n          cx={20}\n          cy={20}\n          selected={selectAll2}\n          setSelected={setSelectAll2}\n        />\n        <Diamond\n          diameter={21}\n          fill=\"#ff0000\"\n          stroke=\"#ff0000\"\n          cx={20}\n          cy={20}\n          selected={selectAll2}\n          setSelected={setSelectAll2}\n        />\n        <Diamond\n          diameter={17}\n          fill=\"#ff0000\"\n          stroke=\"#ff0000\"\n          cx={20}\n          cy={20}\n          selected={selectAll2}\n          setSelected={setSelectAll2}\n        />\n        <Diamond\n          diameter={7}\n          fill=\"#ff0000\"\n          stroke=\"#ff0000\"\n          cx={20}\n          cy={20}\n          selected={selectAll2}\n          setSelected={setSelectAll2}\n        />\n        <Diamond\n          diameter={3}\n          filled\n          fill=\"#ff0000\"\n          stroke=\"#ff0000\"\n          cx={20}\n          cy={20}\n          selected={selectAll2}\n          setSelected={setSelectAll2}\n        />\n      </Fabric>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport ShapeBase from \"./ShapeBase\";\n\nexport default function Plus({\n  diameter,\n  lineWidth,\n  stroke,\n  x,\n  y,\n  selected,\n  setSelected\n}) {\n  const [stitches, setStitches] = React.useState([]);\n\n  React.useEffect(() => {\n    const tempStitches = [];\n\n    for (let x = 0; x < diameter; x++) {\n      for (let y = 0; y < diameter; y++) {\n        if (\n          (x >= Math.floor((diameter - lineWidth) / 2) &&\n            x < Math.floor(diameter - (diameter - lineWidth) / 2)) ||\n          (y >= Math.floor((diameter - lineWidth) / 2) &&\n            y < Math.floor(diameter - (diameter - lineWidth) / 2))\n        ) {\n          tempStitches.push({ fill: stroke, x, y });\n        }\n      }\n    }\n    setStitches(tempStitches);\n  }, [diameter, lineWidth]);\n\n  return (\n    <ShapeBase\n      stitches={stitches}\n      x={x}\n      y={y}\n      selected={selected}\n      setSelected={setSelected}\n    />\n  );\n}\n","import * as React from \"react\";\nimport Fabric from \"../../components/Fabric\";\nimport Plus from \"../../components/shapes/Plus\";\n\nexport default function NestedPlus() {\n  const [selectAll, setSelectAll] = React.useState(false);\n  return (\n    <Fabric cellSize={10} gridSize={[21, 21]}>\n      <g>\n        <Plus\n          cellSize={10}\n          diameter={21}\n          lineWidth={9}\n          stroke=\"#ff0000\"\n          selected={selectAll}\n          setSelected={setSelectAll}\n        />\n        <Plus\n          cellSize={10}\n          diameter={21}\n          lineWidth={5}\n          stroke=\"#ffffff\"\n          selected={selectAll}\n          setSelected={setSelectAll}\n        />\n        <Plus\n          cellSize={10}\n          diameter={3}\n          lineWidth={1}\n          stroke=\"#ff0000\"\n          x={9}\n          y={9}\n          selected={selectAll}\n          setSelected={setSelectAll}\n        />\n      </g>\n    </Fabric>\n  );\n}\n","import Fabric from \"../../components/Fabric\";\nimport Plus from \"../../components/shapes/Plus\";\n\nexport default function PlusCross() {\n  return (\n    <Fabric cellSize={10} gridSize={[21, 21]}>\n      <g>\n        <Plus cellSize={10} diameter={21} lineWidth={1} stroke=\"#ff0000\" />\n        <Plus\n          cellSize={10}\n          diameter={3}\n          lineWidth={1}\n          stroke=\"#ff0000\"\n          x={9}\n          y={1}\n        />\n        <Plus\n          cellSize={10}\n          diameter={3}\n          lineWidth={1}\n          stroke=\"#ff0000\"\n          x={9}\n          y={17}\n        />\n        <Plus\n          cellSize={10}\n          diameter={3}\n          lineWidth={1}\n          stroke=\"#ff0000\"\n          x={1}\n          y={9}\n        />\n        <Plus\n          cellSize={10}\n          diameter={3}\n          lineWidth={1}\n          stroke=\"#ff0000\"\n          x={17}\n          y={9}\n        />\n      </g>\n    </Fabric>\n  );\n}\n","import * as React from \"react\";\nimport G from \"../G\";\nimport Plus from \"./Plus\";\n\n/**\n * ### PlusStar\n * Compound shape of four plusses in a diamond\n * @param {Object} props\n * @param {string[]} props.colors - colors of each plus [top, right, bottom, left]\n */\nexport default function PlusStar({ colors, x, y }) {\n  const [selectAll, setSelectAll] = React.useState(false);\n\n  return (\n    <G x={x} y={y}>\n      <Plus\n        diameter={3}\n        lineWidth={1}\n        stroke={colors[0]}\n        x={1}\n        y={3}\n        selected={selectAll}\n        setSelected={setSelectAll}\n      />\n      <Plus\n        diameter={3}\n        lineWidth={1}\n        stroke={colors[1]}\n        x={3}\n        y={1}\n        selected={selectAll}\n        setSelected={setSelectAll}\n      />\n      <Plus\n        diameter={3}\n        lineWidth={1}\n        stroke={colors[2]}\n        x={5}\n        y={3}\n        selected={selectAll}\n        setSelected={setSelectAll}\n      />\n      <Plus\n        diameter={3}\n        lineWidth={1}\n        stroke={colors[3]}\n        x={3}\n        y={5}\n        selected={selectAll}\n        setSelected={setSelectAll}\n      />\n    </G>\n  );\n}\n","import Fabric from \"../../components/Fabric\";\nimport PlusStar from \"../../components/shapes/PlusStar\";\nimport React from \"react\";\nimport { AppContext } from \"../../app-context\";\n\nexport default function PlusStars() {\n  const { cellSize } = React.useContext(AppContext);\n  return (\n    <Fabric cellSize={cellSize} gridSize={[21, 21]} backgroundColor=\"white\">\n      <g transform={`translate(${0 * cellSize}, ${0 * cellSize})`}>\n        <PlusStar\n          colors={[\"gold\", \"#a91b0d\", \"gold\", \"#a91b0d\"]}\n          cellSize={10}\n          x={3}\n        />\n        <PlusStar\n          colors={[\"gold\", \"#a91b0d\", \"gold\", \"#a91b0d\"]}\n          cellSize={10}\n          x={9}\n        />\n      </g>\n      <g transform={`translate(${0 * cellSize}, ${5 * cellSize})`}>\n        <PlusStar\n          colors={[\"gold\", \"#a91b0d\", \"gold\", \"#a91b0d\"]}\n          cellSize={10}\n          x={0}\n        />\n        <PlusStar\n          colors={[\"gold\", \"#a91b0d\", \"gold\", \"#a91b0d\"]}\n          cellSize={10}\n          x={6}\n        />\n        <PlusStar\n          colors={[\"gold\", \"#a91b0d\", \"gold\", \"#a91b0d\"]}\n          cellSize={10}\n          x={12}\n        />\n      </g>\n      <g transform={`translate(${0 * cellSize}, ${10 * cellSize})`}>\n        <PlusStar\n          colors={[\"gold\", \"#a91b0d\", \"gold\", \"#a91b0d\"]}\n          cellSize={10}\n          x={3}\n        />\n        <PlusStar\n          colors={[\"gold\", \"#a91b0d\", \"gold\", \"#a91b0d\"]}\n          cellSize={10}\n          x={9}\n        />\n      </g>\n    </Fabric>\n  );\n}\n","import { makeStyles } from \"@material-ui/core\";\nimport React from \"react\";\nimport * as Tone from \"tone\";\nimport { polySketchInC } from \"../../components/tonejs/polysketchinC\";\n\nconst useStyles = makeStyles({\n  root: {\n    \"& button\": {\n      display: \"block\"\n    }\n  }\n});\n\nexport default function ToneTest() {\n  const classes = useStyles();\n  const loopBeat = React.useRef(new Tone.Loop(polySketchInC, \"16n\"));\n  const [loopOn, setLoopOn] = React.useState(false);\n\n  React.useEffect(() => {\n    loopOn ? loopBeat.current.start(0) : loopBeat.current.stop(0);\n    return () => loopBeat.current.stop(0);\n  }, [loopOn]);\n\n  function handleClick() {\n    setLoopOn(!loopOn);\n  }\n\n  return (\n    <div className={classes.root}>\n      <button onClick={handleClick}>Toggle Beat</button>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport Fabric from \"../../components/Fabric\";\nimport Square from \"../../components/shapes/Square\";\nimport G from \"../../components/G\";\n\nexport default function SquareTest() {\n  const cellSize = 10;\n  const [emptySelected, setEmptySelected] = React.useState(false);\n  const [solidSelected, setSolidSelected] = React.useState(false);\n  const [redSelected, setRedSelected] = React.useState(false);\n  const [groupSelected, setGroupSelected] = React.useState(false);\n\n  return (\n    <Fabric cellSize={cellSize} gridSize={[20, 20]}>\n      <Square\n        width={5}\n        stroke=\"black\"\n        selected={emptySelected}\n        setSelected={setEmptySelected}\n      />\n      <Square\n        width={5}\n        stroke=\"black\"\n        fill=\"black\"\n        x={6}\n        selected={solidSelected}\n        setSelected={setSolidSelected}\n      />\n      <Square\n        width={5}\n        stroke=\"black\"\n        fill=\"red\"\n        x={12}\n        selected={redSelected}\n        setSelected={setRedSelected}\n      />\n      <G x={0} y={6}>\n        <Square\n          width={12}\n          stroke=\"black\"\n          selected={groupSelected}\n          setSelected={setGroupSelected}\n        />\n        <Square\n          width={9}\n          stroke=\"black\"\n          x={8}\n          y={5}\n          selected={groupSelected}\n          setSelected={setGroupSelected}\n        />\n      </G>\n    </Fabric>\n  );\n}\n","import Line from \"../../components/shapes/Line\";\nimport Fabric from \"../../components/Fabric\";\n\nexport default function LineTest() {\n  const cellSize = 10;\n  return (\n    <Fabric cellSize={10} gridSize={[20, 20]} showGrid gridColor=\"#eeeeee\">\n      <Line\n        length={16}\n        angle=\"horizontal\"\n        color=\"black\"\n        cellSize={cellSize}\n        x={2}\n      />\n      <Line\n        length={16}\n        angle=\"vertical\"\n        color=\"black\"\n        cellSize={cellSize}\n        y={2}\n      />\n      <Line\n        length={16}\n        angle=\"horizontal\"\n        color=\"black\"\n        cellSize={cellSize}\n        x={2}\n        y={19}\n      />\n      <Line\n        length={16}\n        angle=\"vertical\"\n        color=\"black\"\n        cellSize={cellSize}\n        x={19}\n        y={2}\n      />\n      <Line\n        length={10}\n        angle=\"diagonal-down\"\n        color=\"black\"\n        cellSize={cellSize}\n        x={5}\n        y={5}\n      />\n      <Line\n        length={10}\n        angle=\"diagonal-up\"\n        color=\"black\"\n        cellSize={cellSize}\n        x={5}\n        y={5}\n      />\n    </Fabric>\n  );\n}\n","import * as React from \"react\";\nimport G from \"../G\";\nimport Line from \"./Line\";\n\nexport default function Star({ center, color, width, selected, setSelected }) {\n  const w = width % 2 === 0 ? width - 1 : width;\n  const dwidth = w > 15 ? w - Math.floor(w / 3.5) : w - Math.floor(w / 5);\n  const dw = dwidth % 2 === 0 ? dwidth - 1 : dwidth;\n\n  return (\n    <G x={center[0]} y={center[1]}>\n      <Line\n        length={w}\n        angle=\"horizontal\"\n        color={color}\n        x={Math.ceil(-w / 2)}\n        selected={selected}\n        setSelected={setSelected}\n      />\n      <Line\n        length={w}\n        angle=\"vertical\"\n        color={color}\n        y={Math.ceil(-w / 2)}\n        selected={selected}\n        setSelected={setSelected}\n      />\n      <Line\n        length={dw}\n        angle=\"diagonal-down\"\n        color={color}\n        x={Math.ceil(-dw / 2)}\n        y={Math.ceil(-dw / 2)}\n        selected={selected}\n        setSelected={setSelected}\n      />\n      <Line\n        length={dw}\n        angle=\"diagonal-up\"\n        color={color}\n        x={Math.ceil(-dw / 2)}\n        y={Math.ceil(-dw / 2)}\n        selected={selected}\n        setSelected={setSelected}\n      />\n    </G>\n  );\n}\n","import React from \"react\";\nimport Fabric from \"../../components/Fabric\";\nimport Diamond from \"../../components/shapes/Diamond\";\nimport Plus from \"../../components/shapes/Plus\";\nimport Square from \"../../components/shapes/Square\";\nimport Star from \"../../components/shapes/Star\";\n\nexport default function StarDiamond() {\n  const red = \"rgb(149,57,45)\";\n  const green = \"rgb(117,153,88)\";\n  const orange = \"rgb(240,158,96)\";\n  return (\n    <Fabric\n      gridSize={[99, 99]}\n      backgroundColor=\"#eee\"\n      showGrid\n      gridColor=\"#333\"\n    >\n      <Diamond diameter={99} stroke={red} cx={49} cy={49} />\n      <Diamond diameter={97} stroke={red} cx={49} cy={49} />\n      <Diamond diameter={95} stroke={red} cx={49} cy={49} />\n      <Diamond diameter={93} stroke={red} cx={49} cy={49} />\n      <Diamond diameter={91} stroke={red} cx={49} cy={49} />\n      <Diamond diameter={89} stroke={red} cx={49} cy={49} />\n      <Diamond diameter={87} stroke={red} cx={49} cy={49} />\n      <Diamond diameter={85} stroke={red} cx={49} cy={49} />\n      <Diamond diameter={83} stroke={red} cx={49} cy={49} />\n      <Diamond diameter={79} stroke=\"#fff\" cx={49} cy={49} />\n      <Diamond diameter={77} stroke=\"#222\" fill=\"#222\" filled cx={49} cy={49} />\n      <Star center={[49, 49]} color={orange} width={47} />\n      <Square width={7} stroke={green} fill={green} x={46} y={46} />\n      <Plus diameter={3} lineWidth={1} stroke=\"white\" x={48} y={48} />\n    </Fabric>\n  );\n}\n","import * as React from \"react\";\r\nimport Fabric from \"../../components/Fabric\";\r\nimport Star from \"../../components/shapes/Star\";\r\n\r\nexport default function StarTest() {\r\n  const [selectFirst, setSelectFirst] = React.useState(false);\r\n  const [selectSecond, setSelectSecond] = React.useState(false);\r\n\r\n  return (\r\n    <Fabric gridSize={[37, 51]} backgroundColor=\"#222\" showGrid>\r\n      <Star\r\n        center={[2, 5]}\r\n        color=\"white\"\r\n        width={1}\r\n        selected={selectFirst}\r\n        setSelected={setSelectFirst}\r\n      />\r\n      <Star\r\n        center={[6, 5]}\r\n        color=\"white\"\r\n        width={3}\r\n        selected={selectSecond}\r\n        setSelected={setSelectSecond}\r\n      />\r\n      <Star center={[12, 5]} color=\"white\" width={5} />\r\n      <Star center={[20, 5]} color=\"white\" width={7} />\r\n      <Star center={[30, 5]} color=\"white\" width={9} />\r\n      <Star center={[7, 20]} color=\"white\" width={11} />\r\n      <Star center={[28, 20]} color=\"white\" width={13} />\r\n      <Star center={[9, 37]} color=\"white\" width={15} />\r\n      <Star center={[27, 37]} color=\"white\" width={17} />\r\n    </Fabric>\r\n  );\r\n}\r\n","import Fabric from \"../../components/Fabric\";\r\nimport Diamond from \"../../components/shapes/Diamond\";\r\n\r\nexport default function EmptyDiamond() {\r\n  return (\r\n    <Fabric showGrid gridSize={[20, 20]} gridColor=\"black\">\r\n      <Diamond diameter={11} fill=\"red\" stroke=\"red\" cx={10} cy={10} />\r\n    </Fabric>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { interpolateGreys } from \"d3-scale-chromatic\";\r\nimport Fabric from \"../../components/Fabric\";\r\nimport ShapeBase from \"../../components/shapes/ShapeBase\";\r\n\r\nexport default function NoiseSquare() {\r\n  const width = 50;\r\n  const [grayNoise, setGrayNoise] = React.useState([]);\r\n  const [bwNoise, setBwNoise] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    const tmp = [];\r\n    for (let x = 0; x < width; x++) {\r\n      for (let y = 0; y < width; y++) {\r\n        tmp.push({ fill: interpolateGreys(Math.random()), x, y });\r\n      }\r\n    }\r\n    setGrayNoise(tmp);\r\n\r\n    const bwtmp = [];\r\n    for (let x = 0; x < width; x++) {\r\n      for (let y = 0; y < width; y++) {\r\n        bwtmp.push({ fill: interpolateGreys(Math.round(Math.random())), x, y });\r\n      }\r\n    }\r\n    setBwNoise(bwtmp);\r\n  }, [width]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Fabric gridSize={[width, width]}>\r\n        <ShapeBase stitches={grayNoise} x={0} y={0} />\r\n      </Fabric>\r\n      <Fabric gridSize={[width, width]}>\r\n        <ShapeBase stitches={bwNoise} x={0} y={0} />\r\n      </Fabric>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/core\";\nimport Fabric from \"../../components/Fabric\";\nimport { IsoTriangle } from \"../../components/shapes/Triangles\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 200,\n    margin: \"0 auto\"\n  }\n});\n\nexport default function IsoscelesTriangles() {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Fabric showGrid gridSize={[19, 19]} gridColor=\"black\">\n        <IsoTriangle orientation=\"north\" size={13} fill=\"red\" x={3} y={6} />\n      </Fabric>\n      <Fabric showGrid gridSize={[19, 19]} gridColor=\"black\">\n        <IsoTriangle orientation=\"south\" size={13} fill=\"red\" x={3} y={6} />\n      </Fabric>\n      <Fabric showGrid gridSize={[19, 19]} gridColor=\"black\">\n        <IsoTriangle orientation=\"east\" size={13} fill=\"red\" x={6} y={3} />\n      </Fabric>\n      <Fabric showGrid gridSize={[19, 19]} gridColor=\"black\">\n        <IsoTriangle orientation=\"west\" size={13} fill=\"red\" x={6} y={3} />\n      </Fabric>\n      <Fabric showGrid gridSize={[19, 19]} gridColor=\"black\">\n        <IsoTriangle orientation=\"north\" size={13} fill=\"red\" x={3} y={6} />\n        <IsoTriangle orientation=\"south\" size={13} fill=\"red\" x={3} y={6} />\n        <IsoTriangle orientation=\"east\" size={13} fill=\"red\" x={6} y={3} />\n        <IsoTriangle orientation=\"west\" size={13} fill=\"red\" x={6} y={3} />\n      </Fabric>\n      <Fabric showGrid gridSize={[19, 19]} gridColor=\"black\">\n        <IsoTriangle orientation=\"north\" size={13} fill=\"red\" x={3} y={12} />\n        <IsoTriangle orientation=\"south\" size={13} fill=\"red\" x={3} y={0} />\n        <IsoTriangle orientation=\"east\" size={13} fill=\"red\" x={0} y={3} />\n        <IsoTriangle orientation=\"west\" size={13} fill=\"red\" x={12} y={3} />\n      </Fabric>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport ShapeBase from \"./ShapeBase\";\n\nexport default function X({ width, fill, x, y, selected, setSelected }) {\n  const [stitches, setStitches] = React.useState([]);\n\n  React.useEffect(() => {\n    const tempStitches = [];\n    for (let i = 0; i < width; i++) {\n      tempStitches.push({ fill: fill, x: i, y: i });\n      tempStitches.push({ fill: fill, x: width - i - 1, y: i });\n    }\n    setStitches(\n      tempStitches.filter(\n        (stitch, index, arr) =>\n          index == arr.findIndex((s) => stitch.x == s.x && stitch.y == s.y)\n      )\n    );\n  }, [width]);\n\n  return (\n    <ShapeBase\n      stitches={stitches}\n      x={x}\n      y={y}\n      selected={selected}\n      setSelected={setSelected}\n    />\n  );\n}\n","import * as React from \"react\";\nimport Fabric from \"../../components/Fabric\";\nimport X from \"../../components/shapes/X\";\n\nexport default function XStitchSet() {\n  const [sel1, setSel1] = React.useState(false);\n  const [sel2, setSel2] = React.useState(false);\n  const [sel3, setSel3] = React.useState(false);\n  const [sel4, setSel4] = React.useState(false);\n  const [sel5, setSel5] = React.useState(false);\n  const [sel6, setSel6] = React.useState(false);\n  return (\n    <Fabric showGrid gridSize={[20, 20]} gridColor=\"black\">\n      <X\n        width={3}\n        fill=\"red\"\n        x={0}\n        y={2}\n        selected={sel1}\n        setSelected={setSel1}\n      />\n      <X\n        width={5}\n        fill=\"red\"\n        x={5}\n        y={1}\n        selected={sel2}\n        setSelected={setSel2}\n      />\n      <X\n        width={7}\n        fill=\"red\"\n        x={12}\n        y={0}\n        selected={sel3}\n        setSelected={setSel3}\n      />\n\n      <X\n        width={4}\n        fill=\"red\"\n        x={0}\n        y={12}\n        selected={sel4}\n        setSelected={setSel4}\n      />\n      <X\n        width={6}\n        fill=\"red\"\n        x={5}\n        y={11}\n        selected={sel5}\n        setSelected={setSel5}\n      />\n      <X\n        width={8}\n        fill=\"red\"\n        x={12}\n        y={10}\n        selected={sel6}\n        setSelected={setSel6}\n      />\n    </Fabric>\n  );\n}\n","import React from \"react\";\nimport { Route, Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core\";\nimport AudioStartButton from \"../../components/AudioStart\";\nimport ColorPicker from \"../../components/ColorPicker\";\n\nimport NestedDiamonds from \"./nested-diamonds\";\nimport NestedPlus from \"./nested-plus\";\nimport PlusCross from \"./plus-cross\";\nimport PlusStars from \"./plus-stars\";\nimport ToneTest from \"./tone-test\";\nimport SquareTest from \"./square-test\";\nimport LineTest from \"./line-test\";\nimport StarDiamond from \"./star-diamond-test\";\nimport StarTest from \"./star-test\";\nimport EmptyDiamond from \"./empty-diamond\";\nimport NoiseSquare from \"./noise-square\";\nimport IsoscelesTriangles from \"./iso-triangles\";\nimport XStitchSet from \"./x-stitch-set\";\n\nconst menu = [\n  {\n    url: \"/tests/nested-diamonds\",\n    title: \"Nested Diamonds\",\n    component: <NestedDiamonds />\n  },\n  {\n    url: \"/tests/nested-plus\",\n    title: \"Nested Plus\",\n    component: <NestedPlus />\n  },\n  { url: \"/tests/plus-cross\", title: \"Plus Cross\", component: <PlusCross /> },\n  { url: \"/tests/plus-star\", title: \"Plus Star\", component: <PlusStars /> },\n  { url: \"/tests/tone-test\", title: \"Tone Test\", component: <ToneTest /> },\n  {\n    url: \"/tests/square-test\",\n    title: \"Square Test\",\n    component: <SquareTest />\n  },\n  { url: \"/tests/line-test\", title: \"Line Test\", component: <LineTest /> },\n  { url: \"/tests/star-test\", title: \"Star Test\", component: <StarTest /> },\n  {\n    url: \"/tests/star-diamond\",\n    title: \"Star Diamond Test\",\n    component: <StarDiamond />\n  },\n  {\n    url: \"/tests/empty-diamond\",\n    title: \"Empty Diamond\",\n    component: <EmptyDiamond />\n  },\n  {\n    url: \"/tests/noise-square\",\n    title: \"Noise Square\",\n    component: <NoiseSquare width={20} />\n  },\n  {\n    url: \"/tests/iso-triangles\",\n    title: \"Isosceles Triangles\",\n    component: <IsoscelesTriangles />\n  },\n  {\n    url: \"/tests/x-stitch-set\",\n    title: \"X Stitch Set\",\n    component: <XStitchSet />\n  }\n];\n\nconst useStyles = makeStyles({\n  embroidery: {\n    maxWidth: 800,\n    margin: \"0 auto\"\n  }\n});\n\nexport default function TestPage() {\n  const classes = useStyles();\n\n  return (\n    <main>\n      <Route path=\"/tests\" exact>\n        <h1>Tests</h1>\n        <nav>\n          <ul>\n            {menu.map((item) => (\n              <li key={item.url}>\n                <Link to={item.url}>{item.title}</Link>\n              </li>\n            ))}\n          </ul>\n        </nav>\n      </Route>\n      {menu.map((item) => (\n        <Route path={item.url} key={item.url}>\n          <Link to=\"/tests\">Back</Link>\n          <ColorPicker />\n          <AudioStartButton />\n          <div className={classes.embroidery}>{item.component}</div>\n        </Route>\n      ))}\n    </main>\n  );\n}\n","import { Button, makeStyles, TextField } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport Fabric from \"../components/Fabric\";\nimport ShapeBase from \"../components/shapes/ShapeBase\";\n\nconst useStyles = makeStyles({\n  controls: {\n    display: \"flex\",\n    marginBottom: 20\n  },\n  form: {\n    marginRight: 20\n  }\n});\n\nexport default function FreeDraw() {\n  const classes = useStyles();\n  const [size, setSize] = React.useState(20);\n  const [text, setText] = React.useState(\"20\");\n  const [stitches, setStitches] = React.useState([]);\n\n  React.useEffect(() => {\n    const temp = [];\n    for (let x = 0; x < size; x++) {\n      for (let y = 0; y < size; y++) {\n        temp.push({ fill: \"transparent\", x, y });\n      }\n    }\n    setStitches(temp);\n  }, [size]);\n\n  function submitHandler(e) {\n    e.preventDefault();\n    setSize(Number(text));\n  }\n  function handleChange(e) {\n    const num = Number(e.target.value);\n    if (e.target.value == \"\" || (num > 0 && num < 51)) setText(e.target.value);\n  }\n\n  function resetHandler(e) {\n    setStitches(stitches.map((stitch) => ({ ...stitch, fill: \"transparent\" })));\n  }\n\n  return (\n    <div>\n      <div className={classes.controls}>\n        <form\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={submitHandler}\n          className={classes.form}\n        >\n          <TextField\n            id=\"grid-size\"\n            label=\"Grid Size\"\n            size=\"small\"\n            variant=\"outlined\"\n            value={text}\n            onChange={handleChange}\n            type=\"number\"\n          />\n        </form>\n        <Button variant=\"outlined\" color=\"secondary\" onClick={resetHandler}>\n          Reset\n        </Button>\n      </div>\n\n      <Fabric gridSize={[size, size]} gridColor=\"#eaeaea\" showGrid>\n        {stitches && <ShapeBase stitches={stitches} x={0} y={0} />}\n      </Fabric>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Route, Link } from \"react-router-dom\";\nimport ColorPicker from \"../components/ColorPicker\";\nimport { makeStyles } from \"@material-ui/core\";\nimport StarDiamond from \"./star-diamond\";\nimport TriangleInD from \"./triangle-in-d\";\nimport AudioStartButton from \"../components/AudioStart\";\nimport TestPage from \"./tests/TestPage\";\nimport FreeDraw from \"./FreeDraw\";\n\nconst menu = [\n  {\n    url: \"/star-diamond\",\n    title: \"Star Diamond Interface\",\n    component: <StarDiamond />\n  },\n  {\n    url: \"/triangle-in-d\",\n    title: \"Triangle In D\",\n    component: <TriangleInD />\n  },\n  {\n    url: \"/free-draw\",\n    title: \"Free Draw\",\n    component: <FreeDraw />\n  }\n];\n\nconst useStyles = makeStyles({\n  embroidery: {\n    maxWidth: 800,\n    margin: \"0 auto\"\n  },\n  backLink: {\n    display: \"inline-block\"\n  }\n});\n\nexport default function Layout() {\n  const classes = useStyles();\n\n  return (\n    <main>\n      <Route path=\"/\" exact>\n        <h1>Vyshyvanka.js/Вишиванка.js</h1>\n        <nav>\n          <ul>\n            <li>\n              <Link to={\"/tests\"}>Tests</Link>\n            </li>\n            {menu.map((item) => (\n              <li key={item.url}>\n                <Link to={item.url}>{item.title}</Link>\n              </li>\n            ))}\n          </ul>\n        </nav>\n      </Route>\n      <Route path={\"/tests\"}>\n        <TestPage />\n      </Route>\n      {menu.map((item) => (\n        <Route path={item.url} key={item.url}>\n          <Link to=\"/\" className={classes.backLink}>\n            Back\n          </Link>\n          <ColorPicker />\n          <AudioStartButton />\n          <div className={classes.embroidery}>{item.component}</div>\n        </Route>\n      ))}\n    </main>\n  );\n}\n","import * as React from \"react\";\nimport * as Tone from \"tone\";\nimport \"./styles.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Layout from \"./layout/layout\";\nimport { AppContext, defaultAppContext } from \"./app-context\";\nimport { colors } from \"./theme/colors\";\n\nTone.Transport.bpm.value = 160;\nTone.Transport.start();\n\nexport default function App() {\n  const [selectFill, setSelectFill] = React.useState(colors.blue);\n  const [isAudioStarted, setIsAudioStarted] = React.useState(false);\n\n  return (\n    <div className=\"App\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <AppContext.Provider\n          value={{\n            ...defaultAppContext,\n            selectFill,\n            setSelectFill,\n            isAudioStarted,\n            setIsAudioStarted\n          }}\n        >\n          <Layout />\n        </AppContext.Provider>\n      </Router>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}